{"version":3,"sources":["firebase/firebase-config.js","helpers/loadNotes.js","types/types.js","helpers/fileUpload.js","actions/notes.js","components/notes/NotesAppBar.js","hooks/useForm.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","firestore","googleAuthProvider","auth","GoogleAuthProvider","loadNotes","uid","a","collection","orderBy","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","then","url","cloudResp","activeNote","note","type","payload","addNewNote","setNotes","startSaveNote","dispatch","getState","noteToFirestore","doc","update","catch","err","Swal","fire","message","refreshNote","title","deleteNote","NotesAppBar","useDispatch","useSelector","state","active","fileSelector","useRef","noteDate","moment","date","className","format","ref","name","style","display","onChange","e","target","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","onClick","current","click","useForm","initialState","useState","values","setValues","reset","handleInputChange","value","NoteScreen","formValues","activeId","useEffect","placeholder","autoComplete","src","alt","delete","NothingSelected","setError","error","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","user","login","displayName","logout","JournalEntry","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","docRef","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","minLength","AuthRouter","path","element","PublicRoute","children","isAuthenticated","PrivateRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"0PAgBEA,IAASC,cAXY,CACnBC,OAAQ,0CACRC,WAAY,yCACZC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,8CAOX,IAAMC,EAAWR,IAASS,YACpBC,EAAqB,IAAIV,IAASW,KAAKC,mBChBhCC,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEAGGP,EAASQ,WAAT,UAAuBF,EAAvB,mBAA4CG,QAAQ,OAAO,QAAQC,MAHtE,cAGfC,EAHe,OAIfC,EAAQ,GAEdD,EAAUE,SAAQ,SAAAC,GACdF,EAAMG,KAAN,aACIC,GAAIF,EAASE,IACVF,EAASG,YATC,kBAadL,GAbc,2CAAH,sDCFTM,EAGF,eAHEA,EAID,gBAJCA,EAMG,iBANHA,EAOM,oBAPNA,EASO,qBATPA,EAUQ,sBAVRA,EAYI,mBAZJA,EAaI,0BAbJA,EAcE,qBAdFA,EAeK,6BAfLA,EAgBK,2BAhBLA,EAiBI,sBAjBJA,EAkBY,0B,iBClBZC,EAAU,uCAAG,WAAMC,GAAN,mBAAAb,EAAA,4DAEL,0DAEXc,EAAW,IAAIC,UACZC,OAAO,gBAAgB,iBAChCF,EAASE,OAAO,OAAOH,GAND,kBAUCI,MARN,yDAQsB,CAC/BC,OAAQ,OACRC,KAAML,IAZQ,YAUZM,EAVY,QAeVC,GAfU,kCAgBUD,EAAKE,OAC5BC,MAAK,YACF,OADa,EAATC,OAjBM,eAgBRC,EAhBQ,yBAqBPA,GArBO,yBAwBFL,EAAKE,OAxBH,oJAAH,sDC4BVI,EAAa,SAACjB,EAAIkB,GAC3B,MAAO,CACHC,KAAMjB,EACNkB,QAAQ,aACJpB,MACGkB,KAMFG,EAAa,SAACrB,EAAIkB,GAC3B,MAAO,CACHC,KAAMjB,EACNkB,QAAQ,aACJpB,MACGkB,KAiBFI,EAAW,SAAC1B,GACrB,MAAO,CACHuB,KAAMjB,EACNkB,QAASxB,IAKJ2B,EAAgB,SAACL,GAE1B,8CAAO,WAAOM,EAAUC,GAAjB,iBAAAlC,EAAA,6DAEKD,EAAQmC,IAAWtC,KAAnBG,IAEH4B,EAAKH,YACCG,EAAKH,WAGVW,EARH,eAQ0BR,IACNlB,GATpB,SAWGhB,EAAS2C,IAAT,UAAgBrC,EAAhB,0BAAqC4B,EAAKlB,KAAM4B,OAAOF,GACxDG,OAAM,SAAAC,GACHC,IAAKC,KAAK,QAASF,EAAIG,QAAS,YAbrC,OAgBHT,EAASU,EAAYhB,EAAKlB,GAAI0B,IAE9BK,IAAKC,KAAK,QAASd,EAAKiB,MAAO,WAlB5B,2CAAP,yDAyBSD,EAAc,SAAClC,EAAIkB,GAE5B,MAAO,CACHC,KAAMjB,EACNkB,QAAS,CACLpB,KACAkB,KAAK,aACDlB,MACGkB,MAmDNkB,EAAa,SAACpC,GACvB,MAAO,CACHmB,KAAMjB,EACNkB,QAAS,CACLpB,Q,wBC1JCqC,EAAc,WAEvB,IAAMb,EAAWc,cACFpB,EAAQqB,aAAY,SAAAC,GAAK,OAAIA,EAAM5C,SAA3C6C,OACDC,EAAeC,mBACfC,EAAWC,IAAO3B,EAAK4B,MAmB7B,OACI,sBAAKC,UAAU,gBAAf,UAEI,+BAAOH,EAASI,OAAO,mBAEvB,uBACAC,IAAOP,EACPQ,KAAM,OACN/B,KAAO,OACPgC,MAAQ,CAACC,QAAS,QAClBC,SAjBiB,SAACC,GACtB,IAAMlD,EAAOkD,EAAEC,OAAOC,MAAM,GACvBpD,GACDoB,EDuFkB,SAACpB,GAC3B,8CAAO,WAAOoB,EAAUC,GAAjB,iBAAAlC,EAAA,6DAEa0B,EAAeQ,IAAW7B,MAAlC6C,OAERV,IAAKC,KAAK,CACNG,MAAO,eACPsB,KAAM,iBACNC,mBAAmB,EACnBC,QAAS,WACL5B,IAAK6B,iBATV,SAamBzD,EAAWC,GAb9B,OAaGyD,EAbH,OAcH5C,EAAWF,IAAM8C,EAEjBrC,EAASD,EAAcN,IAEvBc,IAAK+B,QAlBF,2CAAP,wDCxFiBC,CAAe3D,OAiBxB,gCACI,wBACA2C,UAAU,MACViB,QA3BgB,WACxBtB,EAAauB,QAAQC,SAwBb,qBAOA,wBACAnB,UAAU,MACViB,QAvCO,WAEdxC,EAAUD,EAAcL,KAmCjB,yB,QChDHiD,EAAU,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAEdC,mBAASD,GAFK,mBAEnCE,EAFmC,KAE3BC,EAF2B,KAIpCC,EAAQ,WACZD,EAAUH,IAGNK,EAAoB,SAACnB,GAEvBiB,EAAU,2BACLD,GADI,kBAEPhB,EAAEC,OAAOL,KAAQI,EAAEC,OAAOmB,UAK/B,MAAO,CAACJ,EAAOG,EAAkBD,ICbzBG,EAAa,WAAO,IAGbzD,EAASqB,aAAY,SAAAC,GAAK,OAAIA,EAAM5C,SAA5C6C,OAHoB,EAImB0B,EAAQjD,GAJ3B,mBAIrB0D,EAJqB,KAITH,EAJS,KAIUD,EAJV,KAKpBrC,EAAgByC,EAAhBzC,MAAOzB,EAASkE,EAATlE,KACTc,EAAWc,cAEXuC,EAAWlC,iBAAOzB,EAAKlB,IAE7B8E,qBAAU,WAEF5D,EAAKlB,KAAO6E,EAASZ,UACrBO,IACAK,EAASZ,QAAU/C,EAAKlB,MAG7B,CAACkB,EAAMsD,IAEVM,qBAAU,WAENtD,EAAUP,EAAW2D,EAAW5E,GAAZ,eAAqB4E,OAE1C,CAACA,EAAYpD,IAOhB,OACI,sBAAKuB,UAAU,sBAAf,UAEI,cAAC,EAAD,IAEA,sBAAKA,UAAU,iBAAf,UAEI,uBACI5B,KAAK,OACLuD,MAAOvC,EACPkB,SAAUoB,EACVM,YAAY,WACZhC,UAAU,qBACViC,aAAa,MACb9B,KAAK,UAGT,0BACI6B,YAAY,sBACZhC,UAAU,kBACV2B,MAAOhE,EACP2C,SAAUoB,EACVvB,KAAK,SAKJhC,EAAKH,KAEF,qBAAKgC,UAAU,eAAf,SACI,qBACIkC,IAAK/D,EAAKH,IACVmE,IAAI,aAMpB,wBACAnC,UAAU,iBACViB,QA7CS,WH2GI,IAAChE,EG1GtBwB,GH0GsBxB,EG1GC6E,EAASZ,QH2GpC,uCAAO,WAAOzC,EAAUC,GAAjB,eAAAlC,EAAA,6DAEKD,EAAQmC,IAAWtC,KAAnBG,IAFL,SAIGN,EAAS2C,IAAT,UAAgBrC,EAAhB,0BAAqCU,IAAMmF,SAC5CtD,OAAM,SAAAC,GACH,MAAMA,KANX,OASHN,EAASY,EAAWpC,IATjB,2CAAP,2DGjEY,2BCzEHoF,EAAkB,WAC3B,OACI,sBAAKrC,UAAU,wBAAf,UACI,iDAEI,uBAFJ,sBAKA,mBAAGA,UAAU,+BCNZsC,EAAW,SAACC,GACrB,MAAO,CACHnE,KAAMjB,EACNkB,QAASkE,IAoBJC,EAAgB,WACzB,MAAO,CACHpE,KAAMjB,ICnBDsF,EAA0B,SAACC,EAAOC,GAC3C,OAAO,SAAClE,GAGJA,EDMG,CACHL,KAAMjB,ICLF1B,IAASW,OAAOwG,2BAA2BF,EAAOC,GACjD5E,MAAK,YAAe,IAAZ8E,EAAW,EAAXA,KACLpE,EAASqE,EAAMD,EAAKtG,IAAKsG,EAAKE,cAE9BtE,EAAS+D,QAEV1D,OAAM,SAAAC,GACLC,IAAKC,KAAK,QAASF,EAAIG,QAAS,SAChCT,EAAS+D,UA+CZM,EAAQ,SAACvG,EAAKwG,GACvB,MAAO,CAEH3E,KAAMjB,EACNkB,QAAS,CACL9B,MACAwG,iBAmBNC,EAAS,WACX,MAAO,CACH5E,KAAMjB,IC7FD8F,EAAe,SAAC,GAAoC,IAAlChG,EAAiC,EAAjCA,GAAI8C,EAA6B,EAA7BA,KAAMX,EAAuB,EAAvBA,MAAOzB,EAAgB,EAAhBA,KAAMK,EAAU,EAAVA,IAG5C6B,EAAWC,IAAOC,GAClBtB,EAAWc,cAOjB,OACI,sBACAS,UAAU,4DACViB,QARqB,WAErBxC,EAASP,EAAWjB,EAAG,CAAC8C,OAAMX,QAAOzB,OAAMK,UAI3C,UAKMA,GACE,qBACIgC,UAAU,yBACVI,MAAO,CACH8C,eAAgB,QAChBC,gBAAgB,OAAD,OAASnF,EAAT,QAM3B,sBAAKgC,UAAU,sBAAf,UACI,mBAAGA,UAAU,uBAAb,SACIZ,IAEJ,mBAAGY,UAAU,yBAAb,SACKrC,OAKT,sBAAKqC,UAAU,0BAAf,UACI,+BAAOH,EAASI,OAAO,UACvB,6BAAKJ,EAASI,OAAO,eCzCxBmD,GAAiB,WAAO,IAEzBvG,EAAU2C,aAAY,SAAAC,GAAK,OAAIA,EAAM5C,SAArCA,MAGR,OACI,qBAAKmD,UAAU,oBAAf,SAIQnD,EAAMwG,KAAI,SAAAlF,GAAI,OACV,cAAC,EAAD,eAEQA,GADCA,EAAKlB,UCVrBqG,GAAU,WAEnB,IAAM7E,EAAWc,cACTY,EAASX,aAAY,SAAAC,GAAK,OAAIA,EAAMrD,QAApC+D,KAWR,OACI,wBAAOH,UAAU,qEAAjB,UAEI,sBAAKA,UAAU,0BAAf,UACI,qBAAIA,UAAU,OAAd,UACI,mBAAGA,UAAU,gBACb,sCAASG,EAAT,UAGJ,wBACIH,UAAU,MACViB,QApBK,WAChBxC,EHyEL,uCAAO,WAAMA,GAAN,SAAAjC,EAAA,sEAEEf,IAASW,OAAOmH,UAFlB,OAIH9E,EAASuE,KACTvE,EN+EG,CACHL,KAAMjB,IMrFH,2CAAP,wDGxDY,uBASJ,sBACI6C,UAAU,sBACViB,QAzBS,WAEjBxC,ETRJ,uCAAO,WAAOA,EAAUC,GAAjB,mBAAAlC,EAAA,6DAEKD,EAAQmC,IAAWtC,KAAnBG,IAEFiH,EAAU,CACZpE,MAAO,GACPzB,KAAM,GACNoC,MAAM,IAAI0D,MAAOC,WAPlB,SAWkBzH,EAASQ,WAAT,UAAuBF,EAAvB,mBAA4CoH,IAAIH,GAXlE,OAWGI,EAXH,OAaHnF,EAASP,EAAW0F,EAAO3G,GAAIuG,IAC/B/E,EAASH,EAAWsF,EAAO3G,GAAIuG,IAd5B,2CAAP,0DS6BQ,UAII,mBAAGxD,UAAU,+BACb,mBAAGA,UAAU,OAAb,0BAKJ,cAAC,GAAD,QC1CC6D,GAAgB,WAAO,IAExBnE,EAAWF,aAAY,SAAAC,GAAK,OAAIA,EAAM5C,SAAtC6C,OAGR,OACI,sBAAKM,UAAU,0EAAf,UAEI,cAAC,GAAD,IAEA,+BAISN,EACE,cAAC,EAAD,IACA,cAAC,EAAD,UCfVoE,GAAc,WAEvB,IAAMrF,EAAWc,cACVwE,EAAWvE,aAAY,SAAAC,GAAK,OAAIA,EAAMuE,MAAtCD,QAHsB,EAMU3C,EAAQ,CAC3CsB,MAAO,GACPC,SAAU,KARe,mBAMtBd,EANsB,KAMVH,EANU,KAWtBgB,EAAmBb,EAAnBa,MAAOC,EAAYd,EAAZc,SAad,OACI,gCACI,oBAAI3C,UAAU,cAAd,oBAEA,uBACAiE,SAhBY,SAAC1D,GACjBA,EAAE2D,iBACFzF,EAASgE,EAAwBC,EAAMC,KAenC3C,UAAU,oDAFV,UAKI,uBACI5B,KAAK,QACL4D,YAAY,QACZ7B,KAAK,QACLH,UAAU,cACViC,aAAa,MACbN,MAASe,EACTpC,SAAYoB,IAGhB,uBACItD,KAAK,WACL4D,YAAY,WACZ7B,KAAK,WACLH,UAAU,cACV2B,MAASgB,EACTrC,SAAYoB,IAGhB,wBACItD,KAAK,SACL4B,UAAU,4BACVmE,SAAUJ,EAHd,mBAQA,uBAEA,sBAAK/D,UAAU,wBAAf,UACI,2DAEA,sBACIA,UAAU,aACViB,QAjDM,WAEtBxC,GL4BG,SAACA,GAEJhD,IAASW,OAAOgI,gBAAgBjI,GAC3B4B,MAAK,YAAe,IAAZ8E,EAAW,EAAXA,KACLpE,EAASqE,EAAMD,EAAKtG,IAAKsG,EAAKE,iBAEjCjE,OAAM,SAAAC,GACHC,IAAKC,KAAK,QAASF,EAAIG,QAAS,gBKU5B,UAII,qBAAKc,UAAU,sBAAf,SACI,qBAAKA,UAAU,cAAckC,IAAI,8EAA8EC,IAAI,oBAEvH,mBAAGnC,UAAU,WAAb,SACI,4DAMZ,cAAC,IAAD,CACIqE,GAAG,iBACHrE,UAAU,OAFd,uCC9EHsE,GAAiB,WAE1B,IAAM7F,EAAWc,cACTgF,EAAa/E,aAAY,SAAAC,GAAK,OAAIA,EAAMuE,MAAxCO,SAHwB,EAKQnD,EAAQ,CAC5CjB,KAAM,GACNuC,MAAO,GACPC,SAAU,GACV6B,UAAW,KATiB,mBAKzB3C,EALyB,KAKbH,EALa,KAaxBvB,EAAqC0B,EAArC1B,KAAMuC,EAA+Bb,EAA/Ba,MAAOC,EAAwBd,EAAxBc,SAAU6B,EAAc3C,EAAd2C,UAczBC,EAAc,WAEhB,OAA2B,IAAvBtE,EAAKuE,OAAOC,QACZlG,EAAS6D,EAAS,uBACX,GACwB,IAAxBI,EAAMgC,OAAOC,QACpBlG,EAAS6D,EAAS,wBACX,KACDK,EAAS+B,OAAOC,OAAS,GAAKhC,EAAS+B,SAAWF,EAAUE,UAClEjG,EAAS6D,EAAS,qEACX,IAOf,OACI,gCACI,oBAAItC,UAAU,cAAd,uBAEA,uBACAiE,SAjCe,SAAC1D,GAEpBA,EAAE2D,iBAEEO,MACAhG,EPjBD,CACHL,KAAMjB,IOiBFsB,ENKsC,SAACiE,EAAOC,EAAUxC,GAGhE,OAAO,SAAC1B,GAEJhD,IAASW,OAAOwI,+BAA+BlC,EAAOC,GACjD5E,KADL,uCACU,6BAAAvB,EAAA,6DAASqG,EAAT,EAASA,KAAT,SAEIA,EAAKgC,cAAc,CAAE9B,YAAa5C,IAFtC,OAGF1B,EAASqE,EAAMD,EAAKtG,IAAKsG,EAAKE,cAH5B,2CADV,uDAMKjE,OAAM,SAAAC,GACHC,IAAKC,KAAK,QAASF,EAAIG,QAAS,aMjB3B4F,CAAmCpC,EAAMC,EAASxC,MA4B3DH,UAAU,oDAFV,UAMqB,KAAbuE,GAGQ,sBAAKvE,UAAU,oBAAf,UACIuE,EADJ,OAQZ,uBACInG,KAAK,OACL4D,YAAY,OACZ7B,KAAK,OACLH,UAAU,cACViC,aAAa,MACbN,MAAOxB,EACPG,SAAUoB,IAId,uBACItD,KAAK,QACL4D,YAAY,QACZ7B,KAAK,QACLH,UAAU,cACViC,aAAa,MACb8C,UAAU,IACVpD,MAAOe,EACPpC,SAAUoB,IAId,uBACItD,KAAK,WACL4D,YAAY,WACZ7B,KAAK,WACLH,UAAU,cACV2B,MAAOgB,EACPrC,SAAUoB,IAId,uBACItD,KAAK,WACL4D,YAAY,mBACZ7B,KAAK,YACLH,UAAU,cACV2B,MAAO6C,EACPlE,SAAUoB,IAId,wBACItD,KAAK,SACL4B,UAAU,iCAFd,sBAOA,uBAGA,cAAC,IAAD,CACIqE,GAAG,cACHrE,UAAU,OAFd,wCCpHHgF,GAAa,WACtB,OACI,qBAAKhF,UAAU,aAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOiF,KAAK,QAAQC,QAAS,cAAC,GAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,GAAD,MAEhC,cAAC,IAAD,CAAOD,KAAK,KAAKC,QAAS,cAAC,IAAD,CAAUb,GAAG,qBCf9Cc,GAAc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,SAGzB,OAHwD,EAArBC,gBAS/B,cAAC,IAAD,CAAUhB,GAAG,MAFbe,GCPKE,GAAe,SAAC,GAAgC,IAA/BF,EAA8B,EAA9BA,SAE1B,OAFwD,EAArBC,gBAMhCD,EAEA,cAAC,IAAD,CAAUf,GAAG,iBCKPkB,GAAY,WAErB,IAAM9G,EAAWc,cAFU,EAGK+B,oBAAS,GAHd,mBAGpBkE,EAHoB,KAGVC,EAHU,OAISnE,oBAAS,GAJlB,mBAIpBoE,EAJoB,KAIRC,EAJQ,KA4B3B,OArBA5D,qBAAU,WAENtG,IAASW,OAAOwJ,oBAAoB,SAAC/C,GhB2BZ,IAACtG,GgBzBtB,OAAIsG,QAAJ,IAAIA,OAAJ,EAAIA,EAAMtG,MACNkC,EAAUqE,EAAOD,EAAKtG,IAAKsG,EAAKE,cAChC4C,GAAe,GAEflH,GhBqBkBlC,EgBrBWsG,EAAKtG,IhBsB9C,uCAAO,WAAOkC,GAAP,eAAAjC,EAAA,sEAEiBF,EAAUC,GAF3B,OAEGM,EAFH,OAGH4B,EAASF,EAAS1B,IAHf,2CAAP,yDgBnBY8I,GAAe,GAGnBF,GAAa,QAIlB,CAAChH,EAAUgH,EAAaE,IAGvBH,EAEI,sDAOJ,cAAC,IAAD,UAGI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOP,KAAK,UAAUC,QAClB,cAAC,GAAD,CAAaG,gBAAiBK,EAA9B,SACI,cAAC,GAAD,QAMR,cAAC,IAAD,CAAOT,KAAK,IAAIC,QACZ,cAAC,GAAD,CAAcG,gBAAiBK,EAA/B,SACI,cAAC,GAAD,QAMR,cAAC,IAAD,CAAOT,KAAK,KAAKC,QAAS,cAAC,IAAD,CAAUb,GAAG,wB,2BCzDjDhD,GAAe,CACjBxE,MAAO,GACP6C,OAAQ,MCjBN2B,GAAe,CACjB0C,SAAS,EACTQ,SAAU,ICKRsB,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAErGC,GAAWC,aAAgB,CAC7B9J,KCAuB,WAAyB,IAAxBqD,EAAuB,uDAAf,GAAI0G,EAAW,uCAE/C,OAAQA,EAAO/H,MAGX,KAAKjB,EAED,MAAO,CACHZ,IAAK4J,EAAO9H,QAAQ9B,IACpB4D,KAAMgG,EAAO9H,QAAQ0E,aAG7B,KAAK5F,EAED,MAAO,GAOf,OAAOsC,GDpBPuE,GDNqB,WAAmC,IAAlCvE,EAAiC,uDAAzB4B,GAAc8E,EAAW,uCAEvD,OAAQA,EAAO/H,MACX,KAAKjB,EAED,kCACOsC,GADP,IAEI8E,SAAU4B,EAAO9H,UAGrB,KAAKlB,EAED,kCACOsC,GADP,IAEI8E,SAAU,KAGd,KAAKpH,EAEL,kCACOsC,GADP,IAEIsE,SAAS,IAGb,KAAK5G,EAEL,kCACOsC,GADP,IAEIsE,SAAS,IAIrB,QACI,OAAOtE,IC1Bf5C,MFQwB,WAAmC,IAAlC4C,EAAiC,uDAAzB4B,GAAc8E,EAAW,uCAE1D,OAAQA,EAAO/H,MAEX,KAAKjB,EAGD,OAAO,2BACAsC,GADP,IAEIC,OAAO,eACAyG,EAAO9H,WAItB,KAAKlB,EACD,OAAO,2BACAsC,GADP,IAEI5C,MAAM,CAACsJ,EAAO9H,SAAT,oBAAoBoB,EAAM5C,UAGvC,KAAKM,EAED,OAAO,2BACAsC,GADP,IAEIC,OAAQ,KACR7C,MAAO4C,EAAM5C,MAAMuJ,QAAO,SAAAjI,GAAI,OAAIA,EAAKlB,KAAOkJ,EAAO9H,QAAQpB,QAGrE,KAAKE,EACD,MAAO,GAIX,KAAKA,EACD,OAAO,2BACAsC,GADP,IAEI5C,MAAM,aAAKsJ,EAAO9H,WAG1B,KAAKlB,EAED,OAAO,2BACAsC,GADP,IAEIC,OAAQ,KACR7C,MAAO,KAGf,KAAKM,EACD,OAAO,2BACAsC,GADP,IAEI5C,MAAO4C,EAAM5C,MAAMwG,KAAI,SAAClF,GAAD,OACnBA,EAAKlB,KAAOkJ,EAAO9H,QAAQpB,GACrBkJ,EAAO9H,QAAQF,KACfA,OAIlB,QACI,OAAOsB,ME9DN4G,GAAQC,aAChBL,GACAJ,GACIU,aAAgBC,QEhBZC,GAAa,WACtB,OACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,O,MCHZK,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ac40d5e1.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\"\r\nimport 'firebase/auth'\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDgpf4GCtC8auXRSAemlV3LsBqs1HRsY94\",\r\n    authDomain: \"react-app-cursos-4b896.firebaseapp.com\",\r\n    projectId: \"react-app-cursos-4b896\",\r\n    storageBucket: \"react-app-cursos-4b896.appspot.com\",\r\n    messagingSenderId: \"868477127572\",\r\n    appId: \"1:868477127572:web:946efc22b7ffcf136fdd81\"\r\n  };\r\n\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nconst database = firebase.firestore();  //conexion con firebase\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider(); //conexion con las autenticacion de firebase \r\n\r\nexport {\r\n    database,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { database } from \"../firebase/firebase-config\"\r\n\r\n//carga las notas de firestore\r\nexport const loadNotes = async (uid) => {\r\n\r\n\r\n    const notesSnap = await database.collection(`${uid}/journal/notes`).orderBy('date','desc').get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapHijo => {\r\n        notes.push({                \r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n\r\n    return notes;\r\n\r\n}","\r\nexport const types =  {\r\n   \r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note saved',\r\n    notesFileUrl: '[Notes] Updated imageUrl',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning'  //purga notas al cerrar sesion \r\n\r\n}\r\n","\r\nexport const fileUpload = async(file) => {  \r\n\r\n    const cloudURL = 'https://api.cloudinary.com/v1_1/dc1sebdms/image/upload'; \r\n\r\n    const formData = new FormData();      \r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudURL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json() \r\n            .then(({url}) => {\r\n                return url\r\n            })\r\n\r\n            return cloudResp  \r\n            \r\n        }else{\r\n            throw await resp.json()  \r\n        }\r\n        \r\n    } catch (err) {\r\n       throw err       \r\n    }\r\n   \r\n}\r\n","import { database } from '../firebase/firebase-config'\r\nimport { loadNotes } from '../helpers/loadNotes'\r\nimport { types } from '../types/types'\r\nimport Swal from 'sweetalert2'\r\nimport { fileUpload } from '../helpers/fileUpload'\r\n\r\n\r\n//crea una nueva nota \r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {  \r\n\r\n        const { uid } = getState().auth\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        //path de la collection de DB\r\n        const docRef = await database.collection(`${uid}/journal/notes`).add(newNote)\r\n\r\n        dispatch(activeNote(docRef.id, newNote))\r\n        dispatch(addNewNote(docRef.id, newNote))\r\n    }\r\n}\r\n\r\n\r\n//activa la nueva nota para verla en pantalla\r\nexport const activeNote = (id, note) => { \r\n    return {\r\n        type: types.notesActive,\r\n        payload: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n}\r\n\r\n//al crear una nueva nota, la sube al store de redux\r\nexport const addNewNote = (id, note) => {\r\n    return {\r\n        type: types.notesAddNew,\r\n        payload:{\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n//carga las notas al cargar o recargar la pagina \r\nexport const startLoadingNotes = (uid) => {  \r\n    return async (dispatch) => {\r\n\r\n        const notes = await loadNotes(uid)\r\n        dispatch(setNotes(notes))\r\n    }\r\n}\r\n\r\n//action que pone las notas en nuestro store\r\nexport const setNotes = (notes) => {  \r\n    return {\r\n        type: types.notesLoad,\r\n        payload: notes\r\n    }\r\n}\r\n\r\n//envia y actualiza los cambios de la nota en firestore\r\nexport const startSaveNote = (note) => {    \r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {             \r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await database.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore)\r\n            .catch(err => {\r\n                Swal.fire('Error', err.message, 'error')\r\n            });\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore))  \r\n\r\n        Swal.fire('Saved', note.title, 'success')  \r\n    }\r\n\r\n}\r\n\r\n\r\n//actualiza los cambios en en la vista previa de la nota\r\nexport const refreshNote = (id, note) => {\r\n\r\n    return {\r\n        type: types.notesUpdated,\r\n        payload: {\r\n            id,\r\n            note: {\r\n                id,    \r\n                ...note\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//actualiza la nota con la nueva imagen y hace los cambios en el firestore\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        }); \r\n\r\n        const fileUrl = await fileUpload(file)\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote))\r\n\r\n        Swal.close();\r\n\r\n    }\r\n}\r\n\r\n\r\n//elimina la nota de la base de datos y de las notas del store de redux \r\nexport const startDeleting = (id) => {   \r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        await database.doc(`${uid}/journal/notes/${id}`).delete()\r\n            .catch(err => {\r\n                throw err\r\n            });\r\n\r\n        dispatch(deleteNote(id));\r\n\r\n    }\r\n\r\n}\r\n\r\n//action para eliminar la nota del store de redux \r\nexport const deleteNote = (id) => {\r\n    return {\r\n        type: types.notesDelete,\r\n        payload: {\r\n            id\r\n        }\r\n    }\r\n\r\n}\r\n\r\n//elimina las notas del store de redux una vez hace el logout \r\nexport const deleteAllLogout = () => {\r\n\r\n    return {\r\n        type: types.notesLogoutCleaning,\r\n    }\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes'\r\nimport moment from 'moment'\r\n\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {active: note} = useSelector(state => state.notes)\r\n    const fileSelector = useRef()\r\n    const noteDate = moment(note.date)    \r\n\r\n\r\n    const handleSave = () => {\r\n        \r\n         dispatch( startSaveNote(note) )\r\n    }\r\n\r\n    const handlePictureUpload = () => {\r\n        fileSelector.current.click()\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0]; \r\n        if ( file ){   // if se subio un archivo\r\n            dispatch(startUploading(file))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n\r\n            <span>{noteDate.format('MMMM Do, YYYY')}</span>\r\n\r\n            <input\r\n            ref = {fileSelector}\r\n            name= 'file'\r\n            type = 'file'\r\n            style= {{display: 'none' }}\r\n            onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                className=\"btn\"\r\n                onClick={handlePictureUpload}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                className=\"btn\"\r\n                onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () =>{\r\n      setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n    \r\n        setValues({\r\n          ...values,\r\n         [e.target.name] : e.target.value\r\n        });\r\n    \r\n     }\r\n\r\n     return [values,handleInputChange,reset]; \r\n\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\n\r\n\r\nexport const NoteScreen = () => {\r\n\r\n\r\n    const { active: note } = useSelector(state => state.notes)\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const { title, body } = formValues;\r\n    const dispatch = useDispatch()\r\n\r\n    const activeId = useRef(note.id) \r\n\r\n    useEffect(() => {\r\n\r\n        if (note.id !== activeId.current) {  \r\n            reset();\r\n            activeId.current = note.id   \r\n        }\r\n\r\n    }, [note, reset])  \r\n\r\n    useEffect(() => {\r\n\r\n        dispatch((activeNote(formValues.id, { ...formValues }))) \r\n\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(activeId.current))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Untitled\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name='title'\r\n                ></input>\r\n\r\n                <textarea\r\n                    placeholder=\"what happened today\"\r\n                    className=\"notes__textarea\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                    name='body'\r\n                >\r\n                </textarea>\r\n\r\n                {\r\n                    (note.url)\r\n                    && (\r\n                        <div className=\"notes__image\">\r\n                            <img\r\n                                src={note.url}\r\n                                alt=\"imagen\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <button \r\n                className='btn btn-danger'\r\n                onClick={handleDelete}\r\n                >\r\n                    Delete\r\n                </button>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                create an entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\n\r\nexport const setError = (error) => {\r\n    return {\r\n        type: types.uiSetError,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n    return {\r\n        type: types.uiRemoveError\r\n    }\r\n}\r\n\r\n\r\n//cuando esta en pantalla de login, y presiona el boton \"login\", el valor se pone en true, y si esta en true, no puede volver apretar el boton hasta que cambie a false \r\nexport const startLoading = () => {\r\n    return {\r\n        type: types.uiStartLoading\r\n    }\r\n}\r\n\r\n\r\n//lo mismo q startLoadin, pero al revez, para q valor = false y poder presionar el boton otra vez\r\nexport const finishLoading = () => {\r\n    return {\r\n        type: types.uiFinishLoading\r\n    }\r\n}\r\n","import { googleAuthProvider, firebase } from '../firebase/firebase-config';\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { types } from \"../types/types\"\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { deleteAllLogout } from './notes';\r\n\r\n\r\n\r\n//LOGEAR USUARIO CON EMAIL Y PASSWORD\r\nexport const startLoginEmailPassword = (email, password) => {  \r\n    return (dispatch) => {\r\n\r\n        //este dispatch pone el loading en falso para q que el usuario no pueda tocar otra vez el boton hasta que se termine de verificar el usuario\r\n        dispatch(startLoading()) \r\n\r\n            firebase.auth().signInWithEmailAndPassword(email, password)   \r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName)) \r\n               \r\n                dispatch(finishLoading())  //cambia a loading = true para volver a habilitar el boton \r\n\r\n            }).catch(err => {\r\n                Swal.fire('Error', err.message, 'error') \r\n                dispatch(finishLoading())\r\n            })\r\n        \r\n    }\r\n    \r\n\r\n\r\n}\r\n\r\n\r\n//LOGEAR AL TERMINAR EL REGISTRO \r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n\r\n\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)  //registra al usuario en firebase \r\n            .then(async ({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name }) \r\n                dispatch(login(user.uid, user.displayName)) \r\n            })\r\n            .catch(err => {\r\n                Swal.fire('Error', err.message, 'error')  \r\n            })\r\n    }\r\n}\r\n\r\n\r\n//LOGEAR USUARIO CON GOOGLE\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().signInWithPopup(googleAuthProvider)  //abre la ventana de google\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n            .catch(err => {\r\n                Swal.fire('Error', err.message, 'error') \r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n//recoge los datos del usuario y los pone en el store de redux \r\nexport const login = (uid, displayName) => {   \r\n    return {\r\n\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//logout\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n\r\n       await firebase.auth().signOut();\r\n\r\n        dispatch(logout())\r\n        dispatch(deleteAllLogout())\r\n\r\n    } \r\n}\r\n\r\n\r\nconst logout = () => {\r\n    return {\r\n        type: types.logout,\r\n    }\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\nimport { activeNote } from '../../actions/notes'\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n\r\n    const noteDate = moment(date)    \r\n    const dispatch = useDispatch()\r\n\r\n    const handleActiveNote = () => {\r\n    \r\n        dispatch(activeNote(id,{date, title, body, url}))\r\n    }\r\n\r\n    return (\r\n        <div \r\n        className=\"journal__entry pointer animate__animated animate__fadeIn \"\r\n        onClick={handleActiveNote}\r\n        >\r\n\r\n            { url &&\r\n                <div\r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}>\r\n                </div>\r\n            }\r\n\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                   {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n\r\n    return (\r\n        <div className=\"journal__entries \">\r\n\r\n\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry\r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport {  startNewNote  } from '../../actions/notes'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n         dispatch(startLogout())\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n\r\n        dispatch(startNewNote())\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar animate__animated animate__fadeIn animate__faster\"> \r\n\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i> \r\n                    <span>  {name} </span>\r\n                </h3>\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div\r\n                className=\"journal__new-entry \"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    new entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n\r\n            <Sidebar />\r\n\r\n            <main> \r\n\r\n\r\n                {\r\n                    (active) \r\n                    ?  <NoteScreen />\r\n                    :  <NothingSelected/> \r\n                }\r\n\r\n               \r\n\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();  \r\n    const {loading} = useSelector(state => state.ui)\r\n\r\n\r\n    const [formValues, handleInputChange]= useForm({   \r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email,password))\r\n    }\r\n\r\n    const handleGoogleLogin = ()=>{  \r\n\r\n        dispatch(startGoogleLogin())\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Login </h3>\r\n\r\n            <form \r\n            onSubmit={handleLogin}\r\n            className='animate__animated animate__fadeIn animate__faster'\r\n            >\r\n\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value = {email}\r\n                    onChange = {handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value = {password}\r\n                    onChange = {handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <hr />\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick = {handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    const { msgError } = useSelector(state => state.ui)  //asi recibo la informacion que esta en el store (osea, la informacion de los reducers)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: \"\",\r\n        password2: \"\"\r\n\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n\r\n    const handleRegister = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (isFormValid()) {\r\n            dispatch(removeError())\r\n            dispatch(startRegisterWithEmailPasswordName(email,password,name))\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('name is requiered'))\r\n            return false\r\n        } else if (email.trim().length === 0) {\r\n            dispatch(setError('email is requiered'))\r\n            return false\r\n        }else if (password.trim().length < 5 || password.trim() !== password2.trim()) {\r\n            dispatch(setError('password needs to be at least 6 characters and match each other'))\r\n            return false\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Register </h3>\r\n\r\n            <form \r\n            onSubmit={handleRegister}\r\n            className='animate__animated animate__fadeIn animate__faster'\r\n            >\r\n\r\n                {\r\n                    msgError !== '' &&\r\n\r\n                        (\r\n                            <div className='auth__alert-error'>\r\n                               {msgError} {/*esto se pudo hacer con un state, pero aqui se hizo con redux (con reducer uiReducer), para practicar*/}\r\n                            </div>\r\n                        )\r\n\r\n                }\r\n\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    minLength=\"5\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <hr />\r\n\r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Registered already?\r\n                </Link>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Route,\r\n    Routes,\r\n    Navigate\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">  \r\n            <div className=\"auth__box-container\">\r\n                <Routes>\r\n\r\n                    <Route path='login' element={<LoginScreen/>} />\r\n                    <Route path=\"register\" element={<RegisterScreen/>} />\r\n\r\n                    <Route path=\"/*\" element={<Navigate to='/login'/>}></Route>\r\n\r\n\r\n                </Routes>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Navigate} from \"react-router-dom\";\r\n\r\n\r\nexport const PublicRoute = ({children, isAuthenticated}) => {\r\n\r\n\r\n    return (\r\n        \r\n        !isAuthenticated //false\r\n        ?\r\n        children\r\n        : \r\n        <Navigate to='/'/>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nexport const PrivateRoute = ({children,isAuthenticated}) => {\r\n\r\n    return (\r\n       \r\n       isAuthenticated  //true\r\n       ? \r\n       children\r\n       :\r\n       <Navigate to='/auth/login'/>\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Routes,\r\n    Navigate\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport { login } from '../actions/auth'\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [checking, setChecking] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        firebase.auth().onAuthStateChanged( (user) => {  \r\n\r\n            if (user?.uid) {   \r\n                dispatch( login( user.uid, user.displayName ) )\r\n                setIsLoggedIn( true )\r\n\r\n                dispatch( startLoadingNotes( user.uid ) )\r\n\r\n            } else {\r\n                setIsLoggedIn( false )\r\n            }\r\n\r\n            setChecking( false ) \r\n\r\n        })\r\n\r\n    }, [dispatch, setChecking, setIsLoggedIn])  \r\n\r\n\r\n    if (checking) {\r\n        return (\r\n            <h1>Espere un momento...</h1>\r\n            \r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n\r\n\r\n            <Routes>\r\n                <Route path=\"/auth/*\" element={\r\n                    <PublicRoute isAuthenticated={isLoggedIn}>\r\n                        <AuthRouter />\r\n                    </PublicRoute>\r\n                }>\r\n                </Route>\r\n\r\n\r\n                <Route path=\"/\" element={\r\n                    <PrivateRoute isAuthenticated={isLoggedIn}>\r\n                        <JournalScreen />\r\n                    </PrivateRoute>\r\n\r\n                }>\r\n                </Route>\r\n\r\n                <Route path=\"/*\" element={<Navigate to='/auth/login' />}></Route>\r\n\r\n\r\n\r\n            </Routes>\r\n        </Router>\r\n    )\r\n}\r\n","/*\r\n\r\nnotes: [],\r\nactive: null,   //nota seleccionada q aparece en pantalla\r\nactive: {      \r\n    id: 'OPINIOSJDFBN3456345',\r\n    title: '',\r\n    body: '',\r\n    imageUrl: ''.\r\n    date: 1241312234\r\n}\r\n\r\n*/\r\n\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n\r\n\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes:[action.payload,...state.notes]\r\n            }\r\n\r\n        case types.notesDelete:\r\n\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload.id)\r\n            }\r\n\r\n        case types.notesFileUrl:\r\n            return {\r\n\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map((note) => (\r\n                    note.id === action.payload.id \r\n                        ? action.payload.note\r\n                        : note\r\n                ))\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: ''\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            \r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n            case types.uiRemoveError:\r\n\r\n                return{\r\n                    ...state,\r\n                    msgError: ''\r\n                }\r\n\r\n                case types.uiStartLoading:  \r\n                    \r\n                return{\r\n                    ...state,\r\n                    loading: true\r\n                }\r\n\r\n                case types.uiFinishLoading:\r\n                    \r\n                return{\r\n                    ...state,\r\n                    loading: false\r\n                }\r\n\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n    \r\n    \r\n}\r\n","import {createStore, combineReducers,applyMiddleware,compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({  \r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\n\r\nexport const store = createStore( \r\n     reducers,\r\n     composeEnhancers(\r\n         applyMiddleware(thunk))\r\n     ); ","import { types } from \"../types/types\";\r\n\r\n\r\n/*  ejemplo de la info del state de abajo\r\n\r\n    {\r\n        uid: 'sdfsfw4523'\r\n        name: 'Carlos'\r\n    }\r\n\r\n */\r\n\r\nexport const authReducer = (state = {}, action) => { \r\n\r\n    switch (action.type) {\r\n\r\n\r\n        case types.login:\r\n\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n\r\n            return {}\r\n\r\n        default:\r\n            break;\r\n\r\n    }\r\n\r\n    return state\r\n\r\n}\r\n","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>   \r\n            <AppRouter />\r\n        </Provider>\r\n            \r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { JournalApp } from './JournalApp';\r\nimport './styles/styles.scss'\r\n\r\nReactDOM.render(\r\n    <JournalApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}